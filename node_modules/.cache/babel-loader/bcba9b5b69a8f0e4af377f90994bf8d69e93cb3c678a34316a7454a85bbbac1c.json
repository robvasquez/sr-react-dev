{"ast":null,"code":"var _jsxFileName = \"/Users/robvasquez/projects/learning/hackerRank/react-sr/src/components/todoList/TodoList.tsx\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTodos } from \"../../features/todos/todosSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useEffect,\n  useCallback,\n  useMemo,\n  useState\n} = React;\nconst TodoList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.todos.todos);\n  const loading = useSelector(state => state.todos.loading);\n  const error = useSelector(state => state.todos.error);\n  const [todoIdSelected, setTodoIdSelected] = useState(-1);\n  useEffect(() => {\n    const abortController = new AbortController();\n    dispatch(fetchTodos(abortController.signal));\n\n    // Cleanup function\n    return () => {\n      abortController.abort();\n    };\n  }, [dispatch]);\n\n  // useMemo example (just for demonstration)\n  const completedTodos = useMemo(() => {\n    return todos.filter(todo => todo.completed);\n  }, [todos]);\n\n  // useCallback example (just for demonstration)\n  const handleTodoClick = useCallback(todoId => {\n    setTodoIdSelected(todoId);\n    console.log(`Clicked todo with id: ${todoId}`);\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Click the ToDo item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), todoIdSelected > -1 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"TodoItem Id \", todoIdSelected]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"-----------------------\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: completedTodos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleTodoClick(todo.id),\n        children: todo.title\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"kHkyHwVPOp9W7YxVA1Kv6syymno=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useDispatch","useSelector","fetchTodos","jsxDEV","_jsxDEV","useEffect","useCallback","useMemo","useState","TodoList","_s","dispatch","todos","state","loading","error","todoIdSelected","setTodoIdSelected","abortController","AbortController","signal","abort","completedTodos","filter","todo","completed","handleTodoClick","todoId","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","id","title","_c","$RefreshReg$"],"sources":["/Users/robvasquez/projects/learning/hackerRank/react-sr/src/components/todoList/TodoList.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {AppDispatch, RootState} from \"../../store/store\";\nimport {fetchTodos} from \"../../features/todos/todosSlice\";\nconst { useEffect, useCallback, useMemo, useState } = React;\n\nconst TodoList = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const todos = useSelector((state: RootState) => state.todos.todos);\n  const loading = useSelector((state: RootState) => state.todos.loading);\n  const error = useSelector((state: RootState) => state.todos.error);\n  const [todoIdSelected, setTodoIdSelected] = useState<number>(-1);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    dispatch(fetchTodos(abortController.signal));\n\n    // Cleanup function\n    return () => {\n      abortController.abort();\n    };\n  }, [dispatch]);\n\n  // useMemo example (just for demonstration)\n  const completedTodos = useMemo(() => {\n    return todos.filter(todo => todo.completed);\n  }, [todos]);\n\n  // useCallback example (just for demonstration)\n  const handleTodoClick = useCallback((todoId: number) => {\n    setTodoIdSelected(todoId);\n    console.log(`Clicked todo with id: ${todoId}`);\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error}</p>;\n\n  return (\n    <div>\n      <div>\n        <h1>Click the ToDo item</h1>\n        {todoIdSelected > -1 && <p>TodoItem Id {todoIdSelected}</p>}\n      </div>\n      <div>-----------------------</div>\n      <ul>\n        {completedTodos.map(todo => (\n          <li key={todo.id} onClick={() => handleTodoClick(todo.id)}>\n            {todo.title}\n          </li>\n        ))}\n      </ul>\n    </div>\n\n  );\n};\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
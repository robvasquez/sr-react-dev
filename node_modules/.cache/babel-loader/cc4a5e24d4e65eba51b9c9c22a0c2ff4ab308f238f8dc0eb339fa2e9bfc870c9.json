{"ast":null,"code":"// store.ts\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport todosReducer from '../features/todos/todosSlice';\nconst store = configureStore({\n  reducer: {\n    todos: todosReducer\n  },\n  middleware: getDefaultMiddleware()\n});\n\n// Enhance the dispatch type with thunk middleware\n\nexport default store;","map":{"version":3,"names":["configureStore","getDefaultMiddleware","todosReducer","store","reducer","todos","middleware"],"sources":["/Users/robvasquez/projects/learning/hackerRank/react-sr/src/store/store.ts"],"sourcesContent":["// store.ts\nimport { configureStore, ThunkAction, Action, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport todosReducer from '../features/todos/todosSlice';\n\nconst store = configureStore({\n  reducer: {\n    todos: todosReducer,\n  },\n  middleware: getDefaultMiddleware(),\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n\n// Enhance the dispatch type with thunk middleware\nexport type AppDispatch = typeof store.dispatch & {\n  <ReturnType = void, State = RootState, ExtraArg = unknown>(\n    action: ThunkAction<ReturnType, State, ExtraArg, Action<string>>\n  ): ReturnType;\n};\n\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n  >;\n\nexport default store;\n"],"mappings":"AAAA;AACA,SAASA,cAAc,EAAuBC,oBAAoB,QAAQ,kBAAkB;AAC5F,OAAOC,YAAY,MAAM,8BAA8B;AAEvD,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAC3BI,OAAO,EAAE;IACPC,KAAK,EAAEH;EACT,CAAC;EACDI,UAAU,EAAEL,oBAAoB,CAAC;AACnC,CAAC,CAAC;;AAIF;;AAcA,eAAeE,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}